@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: dark;
  color: #cdd6f4;
  background-color: #1e1e2e;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html, body, #root {
  height: 100%;
  margin: 0;
  padding: 0;
}

/* Custom scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(75, 85, 99, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background-color: rgba(75, 85, 99, 0.8);
}

/* Editor customizations */
.monaco-editor .margin,
.monaco-editor .monaco-editor-background {
  background-color: #1e1e1e;
}

.monaco-scrollable-element > .scrollbar > .slider {
  background: rgba(121, 82, 179, 0.4) !important;
}

/* Basic codicon styles */
.monaco-editor .codicon {
  font-family: monospace;
  font-size: 16px;
  font-style: normal;
  font-weight: normal;
}

/* Add some codicon symbols as fallback */
.codicon-check:before { content: "‚úì"; }
.codicon-error:before { content: "‚ö†"; }
.codicon-warning:before { content: "‚ö†"; }
.codicon-info:before { content: "‚Ñπ"; }
.codicon-close:before { content: "√ó"; }
.codicon-chevron-right:before { content: "‚Ä∫"; }
.codicon-chevron-down:before { content: "‚åÑ"; }
.codicon-folder:before { content: "üìÅ"; }
.codicon-file:before { content: "üìÑ"; }

.monaco-editor .editor-widget {
  color: #d4d4d4;
  background-color: #252526;
}

.monaco-editor .suggest-widget {
  border: 1px solid #454545;
}

/* CodeMirror customizations */
.cm-editor {
  height: 100%;
  width: 100%;
}

.cm-editor.cm-focused {
  outline: none;
}

.cm-editor .cm-scroller {
  font-family: 'JetBrains Mono', Menlo, Monaco, 'Courier New', monospace;
  line-height: 1.5;
}

.code-mirror-wrapper {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

/* Terminal customizations */
.xterm-viewport::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.xterm-viewport::-webkit-scrollbar-track {
  background: #282c34;
}

.xterm-viewport::-webkit-scrollbar-thumb {
  background-color: #4b5563;
  border-radius: 8px;
}

/* Deep Tree Echo special styling */
.echo-message {
  position: relative;
  overflow: hidden;
}

.echo-message::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  background: linear-gradient(
    45deg,
    rgba(99, 102, 241, 0.05) 0%,
    rgba(167, 139, 250, 0.05) 50%,
    rgba(139, 92, 246, 0.05) 100%
  );
  border-radius: 0.5rem;
}

/* Animation for echo response typing */
@keyframes echo-cursor {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.echo-typing::after {
  content: "‚ñã";
  display: inline-block;
  animation: echo-cursor 1s infinite;
  color: #6366f1;
  font-weight: bold;
  margin-left: 2px;
}

/* Message highlight animations */
@keyframes message-glow {
  0% { box-shadow: 0 0 5px rgba(99, 102, 241, 0.1); }
  50% { box-shadow: 0 0 10px rgba(99, 102, 241, 0.3); }
  100% { box-shadow: 0 0 5px rgba(99, 102, 241, 0.1); }
}

.new-message {
  animation: message-glow 2s ease-in-out;
}

/* React Split customization */
.split-h, .split-v {
  display: flex;
}

.split-h {
  flex-direction: row;
}

.split-v {
  flex-direction: column;
}

.gutter {
  background-color: #3a3a3a;
  background-repeat: no-repeat;
  background-position: 50%;
}

.gutter:hover {
  background-color: #007fd4;
}

.gutter.gutter-horizontal {
  cursor: col-resize;
  width: 6px;
}

.gutter.gutter-vertical {
  cursor: row-resize;
  height: 6px;
}

/* Clean flex layout utils */
.flex-col {
  display: flex;
  flex-direction: column;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-1 {
  flex: 1;
}

.flex-none {
  flex: none;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}